#!/usr/bin/env groovy

// https://github.com/apartmentlist/ci-shared-library
@Library("ci-shared-library")_

properties([
  buildDiscarder(
    logRotator(
      artifactDaysToKeepStr: "",
      artifactNumToKeepStr: "",
      daysToKeepStr: "30",
      numToKeepStr: "10"
    )
  )
])

def k8s_label = "${UUID.randomUUID().toString()}"

pipeline {
  environment {
    APP_NAME = "pubsub_client"
    CI = "true"
    GIT_COMMIT_SHORT = sh(script: "printf \$(git rev-parse --short $GIT_COMMIT)", returnStdout: true)
    GIT_MESSAGE = sh(script: "git log --format=%B -n 1 $GIT_COMMIT", returnStdout: true).trim()
    GIT_USER = sh(script: "git log -1 --pretty=format:'%ae'", returnStdout: true).trim()
    GITHUB_URL = "https://github.com"
    LANG = "en_US.UTF-8"
    LANGUAGE = "en_US:en"
    LC_ALL = "en_US.UTF-8"
    SLACK_CHANNEL = "#releases"
  } // environment

  agent {
    kubernetes {
      label k8s_label
      defaultContainer "jnlp"
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: ruby27
    image: gcr.io/alist-development/ruby:2.7.5
    imagePullPolicy: Always
    resources:
      requests:
        memory: "1024Mi"
        cpu: "1"
      requests:
        memory: "1024Mi"
        cpu: "1"
    command:
    - "tail"
    - "-f"
    - "/dev/null"
  - name: ruby30
    image: gcr.io/alist-development/ruby:3.0.3
    imagePullPolicy: Always
    resources:
      requests:
        memory: "1024Mi"
        cpu: "1"
      requests:
        memory: "1024Mi"
        cpu: "1"
    command:
    - "tail"
    - "-f"
    - "/dev/null"
"""
    } // kubernetes
  } // agent

  options {
    timestamps()
    timeout(
      time: 10,
      unit: "MINUTES"
    )
    ansiColor("xterm")
  } // options

  stages {
    stage('Unit Tests') {
      parallel {
        stage('Ruby 2.7') {
          steps {
            container('ruby27') {
              sh script: 'gem install bundler:2.3.12 && bundle install', label: 'install'
              sh script: 'bundle exec rake', label: 'test'
            } //container
          } //steps
        }//stage

        stage('Ruby 3.0') {
          steps {
            container('ruby30') {
              sh script: 'gem install bundler:2.3.12 && bundle install', label: 'install'
              sh script: 'bundle exec rake', label: 'test'
            } //container
          } //steps
        }//stage
      } //parallel
    } //stage

    stage("Preparation") {
      parallel {
        stage("Slack") {
          steps {
            slackPreparation()
          }
        } // stage - Slack
        stage("Build Description") {
          steps {
            buildDescription()
          }
        } // stage - Build Description
      } // parallel
    } // stage - Preparation
    stage("Publish") {
      when {
        allOf {
          branch "main"
          not { changeRequest() }
        }
      } // when
      parallel {
        stage("to Github packages") {
          steps {
            publishRubyGemToGHP("ruby")
          }
        } // stage - to Github packages
      } // parallel
    } // stage - Publish
  } // stages

  post {
    success {
      slackSuccess()
    }
    failure {
      slackFailure()
    }
  } // post
} // pipeline
